import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

public class prj {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		String ref=null;
		  BufferedReader br;
			try {
				br = new BufferedReader(new FileReader("C:/Users/bohee/Desktop/input.txt"));
					 ref=br.readLine();				            			         		 	        
			         br.close();
				
			} catch ( IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
	}
	
	 static void slide() {
		
		 
		 
		 
	}
	 
	 
	 static String[] makeShortread(StringBuilder ref,int k,int n,int y,char[] dna) {
			//int l=500000-k;
				int l=ref.length()-k;
				String [] shortread=new String[n];
				StringBuilder strtmp;	
				int randomtmp;
				int yindex;
				int tmp = 0;
				for(int i=0;i<n;i++){
					randomtmp=(int)(Math.random()*l);
					System.out.println(randomtmp);
					shortread[i]="";
					for(int j=0;j<k;j++) {
						shortread[i]+=ref.charAt(randomtmp+j);
					}
					
					System.out.println(shortread[i]);
					strtmp=new StringBuilder(shortread[i]);
					//1System.out.println("builder : "+strtmp);
					for(int m=0;m<y;m++) {
						yindex=(int)(Math.random()*k);
						//System.out.println("여기 바꾸자  : "+yindex);
						while(dna[tmp]==shortread[i].charAt(yindex)) {
						tmp=(int)(Math.random()*4);
						}
						strtmp.setCharAt(yindex, dna[tmp]);
						shortread[i]=strtmp.toString();
						for(int q=0;q<k;q++) {
						ref.setCharAt(randomtmp+q, shortread[i].charAt(q));
						}
					//	System.out.println("바뀐 값 :"+shortread[i]);
					}
					
				}
				// 지금은 최소 0자리, 최대 3자리가 다를 수 있습니다.(랜덤으로 하기에 확률 적으로 최소보다는 최대가 나올 확률이 높습니다.)
				
				System.out.println();
				for(int i=0;i<n;i++) {
					System.out.println(shortread[i]);
				}
				return shortread;
				
			}
	
		static StringBuilder makeMyDna(StringBuilder ref,int k,int n,int y,char[] dna,String[]shortread) {
			int indexcount=0;
			int count=0;
			boolean countb=false;
			//int stindex=0;
			int tmp;
			int [][]store=new int[y][2];
			for(int stindex=0;stindex<n;stindex++) {
			for(int v=0;v<=ref.length()-k+1;v++) {
				
				tmp=v;
				countb=true;
				count=0;
				for(int stl=0;stl<k;stl++,tmp++) {
					if(shortread[stindex].charAt(stl)!=ref.charAt(tmp)) {

						count++;
						if(count>y) {
							
							countb=false;
							break;
						}
						store[count-1][0]=stl;
						store[count-1][1]=tmp;
						
					}
				}
				if(countb) {
					for(int i=0;i<count;i++)
					{System.out.println(store[i][1]+","+store[i][0]);
						ref.setCharAt(store[i][1], shortread[stindex].charAt(store[i][0]));}
					break;
					
				}
			}
			
			
			}
		
			return ref;
			
		}
	
	
	

}
